{
  "version": 3,
  "sources": ["empty-module:~/loaders/books.server", "../../../app/components/books.tsx", "../../../app/components/nav.tsx", "../../../app/utils/helpers.ts"],
  "sourcesContent": ["module.exports = {};", "import type { BooksData } from '~/loaders/books.server';\n\nimport Nav from '~/components/nav';\nimport { useParams } from '@remix-run/react';\nimport { getUserIdFromParams } from '~/utils/helpers';\n\ninterface IProps {\n\tloaderData: BooksData;\n}\n\nexport default function Books({ loaderData }: IProps) {\n\tconst params = useParams();\n\tconst userId = getUserIdFromParams(params);\n\n\tconst { books } = loaderData;\n\n\tconsole.log(loaderData);\n\n\treturn (\n\t\t<div className=\"p-8 w-full\">\n\t\t\t<Nav />\n\t\t\t{books.length > 0 && <div>Books!</div>}\n\t\t</div>\n\t);\n}\n", "import type { Who } from '~/utils/types';\n\nimport { useNavigate, useParams } from '@remix-run/react';\nimport { useEffect } from 'react';\nimport { getUserIdFromParams } from '~/utils/helpers';\n\nconst localStorageKey = 'previous-who';\nconst desiredUserIds: Who[] = ['kate', 'chris'];\n\nexport default function Nav() {\n\tconst navigate = useNavigate();\n\tconst params = useParams();\n\tconst userId = getUserIdFromParams(params);\n\n\tuseEffect(() => {\n\t\tif (userId && !desiredUserIds.includes(userId as Who)) {\n\t\t\tnavigate('/');\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousUserId = localStorage.getItem(localStorageKey);\n\n\t\tfor (const desiredUserId of desiredUserIds) {\n\t\t\tif (previousUserId === desiredUserId && userId !== desiredUserId) {\n\t\t\t\tnavigate(`/${previousUserId}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (userId === 'chris' || userId === 'kate') {\n\t\t\tlocalStorage.setItem(localStorageKey, userId);\n\t\t}\n\t}, [userId]);\n\n\treturn (\n\t\t<header className=\"w-full border-b-2 border-b-emerald-600 pb-8 mb-8\">\n\t\t\t<h1 className=\"text-4xl text-emerald-600 font-mono font-medium pb-4\">\n\t\t\t\tBookshelf\n\t\t\t</h1>\n\t\t\t<div className=\"text-xl\">\n\t\t\t\t<label htmlFor=\"userId\">Who are you?</label>\n\t\t\t\t<select\n\t\t\t\t\tid=\"userId\"\n\t\t\t\t\tvalue={userId ?? 'none'}\n\t\t\t\t\tonChange={e => navigate(`/${e.target.value}`)}\n\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t>\n\t\t\t\t\t<option disabled value=\"none\">\n\t\t\t\t\t\tPlease choose\n\t\t\t\t\t</option>\n\t\t\t\t\t<option value=\"kate\">Kate</option>\n\t\t\t\t\t<option value=\"chris\">Chris</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n", "import type { Params } from '@remix-run/react';\n\nexport function getUserIdFromParams(\n\tparams: Readonly<Params<string>>,\n): string | null {\n\treturn params.userId === 'chris' || params.userId === 'kate'\n\t\t? params.userId\n\t\t: null;\n}\n"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAGA,oBAA0B;;;ACH1B;AAEO,6BACN,QACgB;AAChB,SAAO,OAAO,WAAW,WAAW,OAAO,WAAW,SACnD,OAAO,SACP;AAAA;;;ADDJ,IAAM,kBAAkB;AACxB,IAAM,iBAAwB,CAAC,QAAQ;AAExB,eAAe;AAC7B,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,SAAS,oBAAoB;AAEnC,+BAAU,MAAM;AACf,QAAI,UAAU,CAAC,eAAe,SAAS,SAAgB;AACtD,eAAS;AACT;AAAA;AAGD,UAAM,iBAAiB,aAAa,QAAQ;AAE5C,eAAW,iBAAiB,gBAAgB;AAC3C,UAAI,mBAAmB,iBAAiB,WAAW,eAAe;AACjE,iBAAS,IAAI;AACb;AAAA;AAAA;AAAA,KAGA;AAEH,+BAAU,MAAM;AACf,QAAI,WAAW,WAAW,WAAW,QAAQ;AAC5C,mBAAa,QAAQ,iBAAiB;AAAA;AAAA,KAErC,CAAC;AAEJ,SACC,oCAAC,UAAD;AAAA,IAAQ,WAAU;AAAA,KACjB,oCAAC,MAAD;AAAA,IAAI,WAAU;AAAA,KAAuD,cAGrE,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACd,oCAAC,SAAD;AAAA,IAAO,SAAQ;AAAA,KAAS,iBACxB,oCAAC,UAAD;AAAA,IACC,IAAG;AAAA,IACH,OAAO,0BAAU;AAAA,IACjB,UAAU,OAAK,SAAS,IAAI,EAAE,OAAO;AAAA,IACrC,WAAU;AAAA,KAEV,oCAAC,UAAD;AAAA,IAAQ,UAAQ;AAAA,IAAC,OAAM;AAAA,KAAO,kBAG9B,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAO,SACrB,oCAAC,UAAD;AAAA,IAAQ,OAAM;AAAA,KAAQ;AAAA;;;AD3CZ,eAAe,EAAE,cAAsB;AACrD,QAAM,SAAS;AACf,QAAM,SAAS,oBAAoB;AAEnC,QAAM,EAAE,UAAU;AAElB,UAAQ,IAAI;AAEZ,SACC,oCAAC,OAAD;AAAA,IAAK,WAAU;AAAA,KACd,oCAAC,KAAD,OACC,MAAM,SAAS,KAAK,oCAAC,OAAD,MAAK;AAAA;",
  "names": []
}
