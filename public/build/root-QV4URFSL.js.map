{
  "version": 3,
  "sources": ["empty-module:./utils/cookies.server", "browser-route-module:/Users/chris/Projects/bookshelf/app/root.tsx?browser", "../../app/root.tsx"],
  "sourcesContent": ["module.exports = {};", "export { default, links, meta } from \"/Users/chris/Projects/bookshelf/app/root.tsx\";", "import type { LoaderFunction, MetaFunction } from '@remix-run/node';\nimport {\n\tLinks,\n\tLiveReload,\n\tMeta,\n\tOutlet,\n\tScripts,\n\tScrollRestoration,\n\tuseLoaderData,\n} from '@remix-run/react';\n\nimport styles from './styles/app.css';\nimport { userIdCookie } from './utils/cookies.server';\n\nexport const meta: MetaFunction = () => ({\n\tcharset: 'utf-8',\n\ttitle: 'New Remix App',\n\tviewport: 'width=device-width,initial-scale=1',\n});\n\nexport function links() {\n\treturn [{ rel: 'stylesheet', href: styles }];\n}\n\nexport default function App() {\n\tconst userId = useLoaderData<string | undefined>();\n\n\tconsole.log(userId);\n\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<head>\n\t\t\t\t<Meta />\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<Outlet />\n\t\t\t\t<ScrollRestoration />\n\t\t\t\t<Scripts />\n\t\t\t\t<LiveReload />\n\t\t\t</body>\n\t\t</html>\n\t);\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\tconst cookieHeader = request.headers.get('Cookie');\n\tif (!cookieHeader) return undefined;\n\n\tconsole.log();\n\n\tconst userId = await userIdCookie.parse(cookieHeader);\n\treturn userId;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;;;;;;AAYA,qBAA6B;AAEtB,IAAM,OAAqB,MAAO;AAAA,EACxC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,UAAU;AAAA;AAGJ,iBAAiB;AACvB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM;AAAA;AAGrB,eAAe;AAC7B,QAAM,SAAS;AAEf,UAAQ,IAAI;AAEZ,SACC,oCAAC,QAAD;AAAA,IAAM,MAAK;AAAA,KACV,oCAAC,QAAD,MACC,oCAAC,MAAD,OACA,oCAAC,OAAD,QAED,oCAAC,QAAD,MACC,oCAAC,QAAD,OACA,oCAAC,mBAAD,OACA,oCAAC,SAAD,OACA,oCAAC,YAAD;AAAA;",
  "names": []
}
